import{u as g,b as h,r as c,s as f,I as m,R as i,a as l,G as b,j as w,F as k}from"./index-428b5438.js";class a extends Error{}a.prototype.name="InvalidTokenError";function v(t){return decodeURIComponent(atob(t).replace(/(.)/g,(e,r)=>{let o=r.charCodeAt(0).toString(16).toUpperCase();return o.length<2&&(o="0"+o),"%"+o}))}function I(t){let e=t.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return v(e)}catch{return atob(e)}}function E(t,e){if(typeof t!="string")throw new a("Invalid token specified: must be a string");e||(e={});const r=e.header===!0?0:1,o=t.split(".")[r];if(typeof o!="string")throw new a(`Invalid token specified: missing part #${r+1}`);let s;try{s=I(o)}catch(n){throw new a(`Invalid token specified: invalid base64 for part #${r+1} (${n.message})`)}try{return JSON.parse(s)}catch(n){throw new a(`Invalid token specified: invalid json for part #${r+1} (${n.message})`)}}const x=()=>{const t=g(),e=h(),r=c.useCallback(s=>{if(s.credential){const{email:n,exp:d,name:u,picture:p}=E(s.credential);t(f({email:n,exp:d,name:u,picture:p})),e(m)}},[]),o=c.useCallback(()=>{console.log("Login Failed")},[]);return{onSuccess:r,onError:o}},y=()=>{const{onSuccess:t,onError:e}=x();return l(b,{onSuccess:t,onError:e,useOneTap:!0})},A=i.memo(y),G=()=>w(k,{children:["LOGIN",l(A,{})]}),C=i.memo(G);export{C as default};
